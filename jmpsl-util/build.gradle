plugins {
    id "java"
    id "signing"
    id "maven-publish"
    id "org.springframework.boot" version "2.7.3"
    id "io.spring.dependency-management" version "1.0.13.RELEASE"
}

version "1.0.0"
group "pl.miloszgilga"
sourceCompatibility = "11"

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

ext {
    springVersion = "2.7.3"
    jupiterTest = "5.8.1"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:${springVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterTest}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterTest}"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "pl.miloszgilga"
            artifactId = "jmpsl-util"
            version = "1.0.0"
            from components.java
            pom {
                name = "JMPSL Utils"
                description = "Java Multi Purpose Spring Library - utilities methods"
                url = "https://github.com/Milosz08/jmps-library"
                inceptionYear = "2022"
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://opensource.org/licenses/mit-license.php"
                    }
                }
                developers {
                    developer {
                        id = "milosz08"
                        name = "Milosz Gilga"
                        email = "personal@miloszgilga.pl"
                    }
                }
                scm {
                    connection = "scm:git:git:github.com/Milosz08/jmps-library.git"
                    developerConnection = "scm:git:ssh://github.com/Milosz08/jmps-library.git"
                    url = "https://github.com/Milosz08/jmps-library"
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.properties["ossrhUsername"]
                password = project.properties["ossrhPassword"]
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
